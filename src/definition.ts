export enum TokenType {
  Literal,
  Delimiter,
  Keyword,
  EndOfFile
}

export interface Token {
  row: number
  col: number
  type: TokenType
  value: string
}

// ref: <<The Comprehensive LATEX Symbol List>>
export enum Keyword {
  frac = "frac",
  sqrt = "sqrt",
  ldots = 'ldots',
  // LATEX symbols
  amalg = 'amalg',
  approx = 'approx',
  angle = 'angle',
  ast = 'ast',
  bigodot = 'bigodot',
  bigoplus = 'bigoplus',
  bigotimes = 'bigotimes',
  bigsqcup = 'bigsqcup',
  bigtriangledown = 'bigtriangledown',
  bigtriangleup = 'bigtriangleup',
  biguplus = 'biguplus',
  bigvee = 'bigvee',
  bigwedge = 'bigwedge',
  bot = 'bot',
  bowtie = 'bowtie',
  bracelu = 'bracelu',
  bracerd = 'bracerd',
  braceru = 'braceru',
  bullet = 'bullet',
  cap = 'cap',
  cdotp = 'cdotp',
  cdots = 'cdots',
  cdot = 'cdot',
  circ = 'circ',
  clubsuit = 'clubsuit',
  colon = 'colon',
  cong = 'cong',
  coprod = 'coprod',
  cup = 'cup',
  dagger = 'dagger',
  dashv = 'dashv',
  ddagger = 'ddagger',
  acute = 'acute',
  bar = 'bar',
  breve = 'breve',
  check = 'check',
  ddot = 'ddot',
  dot = 'dot',
  grave = 'grave',
  hat = 'hat',
  tilde = 'tilde',
  vec = 'vec',
  widehat = 'widehat',
  widetilde = 'widetilde',
  arrowvert = 'arrowvert',
  Arrowvert = 'Arrowvert',
  backslash = 'backslash',
  bracevert = 'bracevert',
  Downarrow = 'Downarrow',
  downarrow = 'downarrow',
  langle = 'langle',
  lceil = 'lceil',
  lfloor = 'lfloor',
  lgroup = 'lgroup',
  lmoustache = 'lmoustache',
  rangle = 'rangle',
  rbrace = 'rbrace',
  rceil = 'rceil',
  rfloor = 'rfloor',
  rgroup = 'rgroup',
  rmoustache = 'rmoustache',
  uparrow = 'uparrow',
  Uparrow = 'Uparrow',
  Updownarrow = 'Updownarrow',
  updownarrow = 'updownarrow',
  vert = 'vert',
  Vert = 'Vert',
  sqrtsign = 'sqrtsign',
  longleftarrow = 'longleftarrow',
  longrightarrow = 'longrightarrow',
  diamondsuit = 'diamondsuit',
  diamond = 'diamond',
  emptyset = 'emptyset',
  equiv = 'equiv',
  exists = 'exists',
  flat = 'flat',
  forall = 'forall',
  frown = 'frown',
  geq = 'geq',
  gg = 'gg',
  heartsuit = 'heartsuit',
  hookleftarrow = 'hookleftarrow',
  hookrightarrow = 'hookrightarrow',
  iff = 'iff',
  Im = 'Im',
  imath = 'imath',
  infty = 'infty',
  intop = 'intop',
  int = 'int',
  in = 'in',
  jmath = 'jmath',
  land = 'land',
  wedge = 'wedge',
  ldotp = 'ldotp',
  le = 'le',
  leq = 'leq',
  leftarrow = 'leftarrow',
  Leftarrow = 'Leftarrow',
  leftharpoondown = 'leftharpoondown',
  leftharpoonup = 'leftharpoonup',
  leftrightarrow = 'leftrightarrow',
  Leftrightarrow = 'Leftrightarrow',
  lhook = 'lhook',
  ll = 'll',
  lnot = 'lnot',
  neg = 'neg',
  Longleftarrow = 'Longleftarrow',
  longleftrightarrow = 'longleftrightarrow',
  Longleftrightarrow = 'Longleftrightarrow',
  longmapsto = 'longmapsto',
  Longrightarrow = 'Longrightarrow',
  lor = 'lor',
  vee = 'vee',
  mapstochar = 'mapstochar',
  mapsto = 'mapsto',
  mathdollar = 'mathdollar',
  mathellipsis = 'mathellipsis',
  mathparagraph = 'mathparagraph',
  mathsection = 'mathsection',
  mathsterling = 'mathsterling',
  mathunderscore = 'mathunderscore',
  mid = 'mid',
  models = 'models',
  mp = 'mp',
  nabla = 'nabla',
  natural = 'natural',
  nearrow = 'nearrow',
  neq = 'neq',
  ni = 'ni',
  not = 'not',
  nwarrow = 'nwarrow',
  odot = 'odot',
  ointop = 'ointop',
  oint = 'oint',
  ominus = 'ominus',
  oplus = 'oplus',
  oslash = 'oslash',
  otimes = 'otimes',
  owns = 'owns',
  parallel = 'parallel',
  partial = 'partial',
  perp = 'perp',
  pm = 'pm',
  preceq = 'preceq',
  prec = 'prec',
  prime = 'prime',
  prod = 'prod',
  propto = 'propto',
  Relbar = 'Relbar',
  relbar = 'relbar',
  Re = 'Re',
  rhook = 'rhook',
  rightarrow = 'rightarrow',
  Rightarrow = 'Rightarrow',
  rightharpoondown = 'rightharpoondown',
  rightharpoonup = 'rightharpoonup',
  rightleftharpoons = 'rightleftharpoons',
  searrow = 'searrow',
  setminus = 'setminus',
  sharp = 'sharp',
  simeq = 'simeq',
  sim = 'sim',
  smallint = 'smallint',
  smile = 'smile',
  spadesuit = 'spadesuit',
  sqcap = 'sqcap',
  sqcup = 'sqcup',
  sqsubseteq = 'sqsubseteq',
  sqsupseteq = 'sqsupseteq',
  star = 'star',
  subseteq = 'subseteq',
  subset = 'subset',
  succeq = 'succeq',
  succ = 'succ',
  sum = 'sum',
  supseteq = 'supseteq',
  supset = 'supset',
  surd = 'surd',
  swarrow = 'swarrow',
  times = 'times',
  to = 'to',
  top = 'top',
  triangleleft = 'triangleleft',
  triangleright = 'triangleright',
  triangle = 'triangle',
  uplus = 'uplus',
  vdash = 'vdash',
  vdots = 'vdots',
  wp = 'wp',
  wr = 'wr',
  div = 'div',
  ell = 'ell',
  asymp = 'asymp',
  bigcap = 'bigcap',
  bigcup = 'bigcup',
  bigcirc = 'bigcirc',
  //Mathematical symbols-Table 114: stix Negated Binary Relations
  forks = 'forks',
  nhpar = 'nhpar',
  nsime = 'nsime',
  napprox = 'napprox',
  nmid = 'nmid',
  nsucc = 'nsucc',
  napproxeqq = 'napproxeqq',
  nni = 'nni',
  nsucccurlyeq = 'nsucccurlyeq',
  nasymp = 'nasymp',
  notin = 'notin',
  nsucceq = 'nsucceq',
  nBumpeq = 'nBumpeq',
  nparallel = 'nparallel',
  nvarisinobar = 'nvarisinobar',
  nbumpeq = 'nbumpeq',
  nprec = 'nprec',
  nvarniobar = 'nvarniobar',
  ncong = 'ncong',
  npreccurlyeq = 'npreccurlyeq',
  nvDash = 'nvDash',
  ncongdot = 'ncongdot',
  npreceq = 'npreceq',
  nvdash = 'nvdash',
  ne = 'ne',
  nshortmid = 'nshortmid',
  nVDash = 'nVDash',
  neqsim = 'neqsim',
  nshortparallel = 'nshortparallel',
  nVdash = 'nVdash',
  nequiv = 'nequiv',
  nsim = 'nsim',
  //Mathematical symbols-Table 137: AMS Inequalities
  eqslantgtr = 'eqslantgtr',
  gtrdot = 'gtrdot',
  lesseqgtr = 'lesseqgtr',
  ngeq = 'ngeq',
  eqslantless = 'eqslantless',
  gtreqless = 'gtreqless',
  lesseqqgtr = 'lesseqqgtr',
  ngeqq = 'ngeqq',
  geqq = 'geqq',
  gtreqqless = 'gtreqqless',
  lessgtr = 'lessgtr',
  ngeqslant = 'ngeqslant',
  geqslant = 'geqslant',
  gtrless = 'gtrless',
  lesssim = 'lesssim',
  ngtr = 'ngtr',
  ggg = 'ggg',
  gtrsim = 'gtrsim',
  lll = 'lll',
  nleq = 'nleq',
  gnapprox = 'gnapprox',
  gvertneqq = 'gvertneqq',
  lnapprox = 'lnapprox',
  nleqq = 'nleqq',
  gneq = 'gneq',
  leqq = 'leqq',
  lneq = 'lneq',
  nleqslant = 'nleqslant',
  gneqq = 'gneqq',
  leqslant = 'leqslant',
  lneqq = 'lneqq',
  nless = 'nless',
  gnsim = 'gnsim',
  lessapprox = 'lessapprox',
  lnsim = 'lnsim',
  gtrapprox = 'gtrapprox',
  lessdot = 'lessdot',
  lvertneqq = 'lvertneqq',
  //Mathematical symbols-Table 208: Greek Letters
  alpha = 'alpha',
  beta = 'beta',
  gamma = 'gamma',
  delta = 'delta',
  epsilon = 'epsilon',
  varepsilon = 'varepsilon',
  zeta = "zeta",
  eta = "eta",
  theta = "theta",
  vartheta = "vartheta",
  iota = "iota",
  kappa = "kappa",
  lambda = "lambda",
  mu = "mu",
  nu = "nu",
  xi = "xi",
  pi = "pi",
  varpi = "varpi",
  rho = "rho",
  varrho = "varrho",
  sigma = "sigma",
  varsigma = "varsigma",
  tau = "tau",
  upsilon = "upsilon",
  phi = "phi",
  varphi = "varphi",
  chi = "chi",
  psi = "psi",
  omega = "omega",
  Gamma = 'Gamma',
  Delta = 'Delta',
  Theta = "Theta",
  Lambda = "Lambda",
  Xi = "Xi",
  Pi = "Pi",
  Sigma = "Sigma",
  Upsilon = "Upsilon",
  Phi = "Phi",
  Psi = "Psi",
  Omega = "Omega"
}

export const escapeChars = [
  "_", "{", "}", "[", "]", "\\"
]

export const delimiters = [
  "[", "]", "_", "{", "}"
]

//Exclude: [ \ ] _ { }
export const literalChars = [
  " ", "!", "\"", "#", "$", "%", "&", "'", "(", ")", "*", "+", ",", "-", ".", "/",
  "0", "1", "2", "3", "4", "5", "6", "7", "8", "9",
  ":", ";", "<", "=", ">", "?", "@",
  "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P",
  "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z",
  "^", "`",
  "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p",
  "q", "r", "s", "t", "u", "v", "w", "x", "y", "z",
  "|", "~"
]
